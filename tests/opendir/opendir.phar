<?php #PHP_ARCHIVE_HEADER-0.7.1
error_reporting(E_ALL);
if (function_exists('mb_internal_encoding')) {
    mb_internal_encoding('ASCII');
}
if (!class_exists('PHP_Archive')) {/**
 * PHP_Archive Class (implements .phar)
 *
 * @package PHP_Archive
 * @category PHP
 */
/**
 * PHP_Archive Class (implements .phar)
 *
 * PHAR files a singular archive from which an entire application can run.
 * To use it, simply package it using {@see PHP_Archive_Creator} and use phar://
 * URIs to your includes. i.e. require_once 'phar://config.php' will include config.php
 * from the root of the PHAR file.
 *
 * Gz code borrowed from the excellent File_Archive package by Vincent Lascaux.
 *
 * @copyright Copyright © David Shafik and Synaptic Media 2004. All rights reserved.
 * @author Davey Shafik <davey@synapticmedia.net>
 * @author Greg Beaver <cellog@php.net>
 * @link http://www.synapticmedia.net Synaptic Media
 * @version Id: Archive.php,v 1.23 2005/12/19 22:18:04 cellog Exp $
 * @package PHP_Archive
 * @category PHP
 */
 
class PHP_Archive
{
    /**
     * Whether this archive is compressed with zlib
     *
     * @var bool
     */
    private $_compressed;
    /**
     * @var string Real path to the .phar archive
     */
    private $_archiveName = null;
    /**
     * Current file name in the phar
     * @var string
     */
    protected $currentFilename = null;
    /**
     * Length of current file in the phar
     * @var string
     */
    protected $internalFileLength = null;
    /**
     * Current file statistics (size, creation date, etc.)
     * @var string
     */
    protected $currentStat = null;
    /**
     * @var resource|null Pointer to open .phar
     */
    protected $fp = null;
    /**
     * @var int Current Position of the pointer
     */
    protected $position = 0;

    /**
     * Map actual realpath of phars to meta-data about the phar
     *
     * Data is indexed by the alias that is used by internal files.  In other
     * words, if a file is included via:
     * <code>
     * require_once 'phar://PEAR.phar/PEAR/Installer.php';
     * </code>
     * then the alias is "PEAR.phar"
     * 
     * Information stored is the actual file name, a boolean indicating whether
     * this .phar is compressed with zlib, and the precise offset of internal files
     * within the .phar, used with the {@link $_manifest} to load actual file contents
     * @var array
     */
    private static $_pharMapping = array();
    /**
     * File listing for the .phar
     * 
     * The manifest is indexed per phar.
     * 
     * Files within the .phar are indexed by their relative path within the
     * .phar.  Each file has this information in its internal array
     *
     * - 0 = uncompressed file size
     * - 1 = timestamp of when file was added to phar
     * - 2 = offset of file within phar relative to internal file's start
     * - 3 = compressed file size (actual size in the phar)
     * @var array
     */
    private static $_manifest = array();
    /**
     * Absolute offset of internal files within the .phar, indexed by absolute
     * path to the .phar
     *
     * @var array
     */
    private static $_fileStart = array();
    /**
     * file name of the phar
     *
     * @var string
     */
    private $_basename;

    /**
     * Map a full real file path to an alias used to refer to the .phar
     *
     * This function can only be called from the initialization of the .phar itself.
     * Any attempt to call from outside the .phar or to re-alias the .phar will fail
     * as a security measure.
     * @param string $file full realpath() filepath, like /path/to/go-pear.phar
     * @param string $alias alias used in opening a file within the phar
     *                      like phar://go-pear.phar/file
     * @param bool $compressed determines whether to attempt zlib uncompression
     *                         on accessing internal files
     * @param int $dataoffset the value of __COMPILER_HALT_OFFSET__
     */
    public static final function mapPhar($alias, $compressed, $file, $dataoffset)
    {
        if ($compressed) {
            if (!function_exists('gzinflate')) {
                die('Error: zlib extension is not enabled - gzinflate() function needed' .
                    ' for compressed .phars');
            }
        }
        // this ensures that this is safe
        if (!in_array($file, get_included_files())) {
            die('SECURITY ERROR: PHP_Archive::mapPhar can only be called from within ' .
                'the phar that initiates it');
        }
        if (!is_array(self::$_pharMapping)) {
            self::$_pharMapping = array();
        }
        if (isset(self::$_pharMapping[$alias])) {
            die('ERROR: PHP_Archive::mapPhar has already been called for alias "' .
                $alias . '" cannot re-alias to "' . $file . '"');
        }
        self::$_pharMapping[$alias] = array($file, $compressed, $dataoffset);
    }

    /**
     * @param string
     */
    private static function processFile($path)
    {
        if ($path == '.') {
            return '';
        }
        $std = str_replace("\\", "/", $path);
        while ($std != ($std = ereg_replace("[^\/:?]+/\.\./", "", $std))) ;
        $std = str_replace("/./", "", $std);
        if (strlen($std) > 1 && $std[0] == '/') {
            $std = substr($std, 1);
        }
        if (strncmp($std, "./", 2) == 0) {
            return substr($std, 2);
        } else {
            return $std;
        }
    }

    /**
     * Seek in the master archive to a matching file or directory
     * @param string
     */
    protected function selectFile($path, $allowdirs = true)
    {
        $std = self::processFile($path);
        if (isset(self::$_manifest[$this->_archiveName][$path])) {
            $this->_setCurrentFile($path);
            return true;
        }
        if (!$allowdirs) {
            return 'Error: "' . $path . '" is not a file in phar "' . $this->_basename . '"';
        }
        foreach (self::$_manifest[$this->_archiveName] as $file => $info) {
            if (empty($std) ||
                  //$std is a directory
                  strncmp($std.'/', $path, strlen($std)+1) == 0) {
                $this->currentFilename = $this->internalFileLength = $this->currentStat = null;
                return true;
            }
        }
        return 'Error: "' . $path . '" not found in phar "' . $this->_basename . '"';
    }

    private function _setCurrentFile($path)
    {
        $this->currentStat = array(
            2 => 0100444, // file mode, readable by all, writeable by none
            4 => 0, // uid
            5 => 0, // gid
            7 => self::$_manifest[$this->_archiveName][$path][0], // size
            9 => self::$_manifest[$this->_archiveName][$path][1], // creation time
            );
        $this->currentFilename = $path;
        // actual file length in file includes 8-byte header
        $this->internalFileLength = self::$_manifest[$this->_archiveName][$path][3] - 8;
        // seek to offset of file header within the .phar
        if (is_resource(@$this->fp)) {
            fseek($this->fp, self::$_fileStart[$this->_archiveName] + self::$_manifest[$this->_archiveName][$path][2]);
        }
    }

    /**
     * Seek to a file within the master archive, and extract its contents
     * @param string
     * @return array|string an array containing an error message string is returned
     *                      upon error, otherwise the file contents are returned
     */
    public function extractFile($path)
    {
        $this->fp = @fopen($this->_archiveName, "rb");
        $stat = fstat($this->fp);
        if (!$this->fp) {
            return array('Error: cannot open phar "' . $this->_archiveName . '"');
        }
        if (($e = $this->selectFile($path, false)) === true) {
            $temp = unpack("Vcrc32/Visize", fread($this->fp, 8));
            $data = '';
            $count = $this->internalFileLength;
            while ($count) {
                if ($count < 8192) {
                    $data .= @fread($this->fp, $count);
                    $count = 0;
                } else {
                    $count -= 8192;
                    $data .= @fread($this->fp, 8192);
                }
            }
            @fclose($this->fp);
            if ($this->_compressed) {
                $data = gzinflate($data);
            }
            if (!isset(self::$_manifest[$this->_archiveName][$path]['ok'])) {
                if ($temp['isize'] != $this->currentStat[7]) {
                    return array("Not valid internal .phar file (size error {$size} != " .
                        $this->currentStat[7] . ")");
                }
                if ($temp['crc32'] != crc32($data)) {
                    return array("Not valid internal .phar file (checksum error)");
                }
                self::$_manifest[$this->_archiveName][$path]['ok'] = true;
            }
            return $data;
        } else {
            @fclose($this->fp);
            return array($e);
        }
    }

    /**
     * Locate the .phar archive in the include_path and detect the file to open within
     * the archive.
     *
     * Possible parameters are phar://filename_within_phar.ext or
     * phar://pharname.phar/filename_within_phar.ext
     *
     * phar://filename_within_phar.ext will simply use the last .phar opened.
     * @param string a file within the archive
     * @return string the filename within the .phar to retrieve
     */
    public function initializeStream($file)
    {
        $info = parse_url($file);
        if (!isset($info['host']) || !count(self::$_pharMapping)) {
            // malformed internal file
            return false;
        }
        if (!isset($info['path'])) {
            // last opened phar is requested
            $info['path'] = $info['host'];
            $info['host'] = '';
        } elseif (strlen($info['path']) > 1) {
            $info['path'] = substr($info['path'], 1);
        }
        if (isset(self::$_pharMapping[$info['host']])) {
            $this->_basename = $info['host'];
            $this->_archiveName = self::$_pharMapping[$info['host']][0];
            $this->_compressed = self::$_pharMapping[$info['host']][1];
        } else {
            // no such phar has been included, or last opened phar is requested
            $pharinfo = end(self::$_pharMapping);
            $this->_basename = key(self::$_pharMapping);
            $this->_archiveName = $pharinfo[0];
            $this->_compressed = $pharinfo[1];
        }
        if (!isset(self::$_manifest[$this->_archiveName])) {
            $fp = fopen($this->_archiveName, 'rb');
            // seek to __HALT_COMPILER_OFFSET__
            fseek($fp, self::$_pharMapping[$this->_basename][2]);
            $manifest_length = unpack('Vlen', fread($fp, 4));
            self::$_manifest[$this->_archiveName] =
                $this->_unserializeManifest(fread($fp, $manifest_length['len']));
            self::$_fileStart[$this->_archiveName] = ftell($fp);
            fclose($fp);
        }
        $file = $info['path'];
        return $file;
    }

    /**
     * Enter description here...
     *
     * @param unknown_type $manifest
     * @return unknown
     */
    private function _unserializeManifest($manifest)
    {
        // retrieve the number of files in the manifest
        $info = unpack('V', substr($manifest, 0, 4));
        $manifest = substr($manifest, 4);
        $ret = array();
        for ($i = 0; $i < $info[1]; $i++) {
            // length of the file name
            $len = unpack('V', substr($manifest, 0, 4));
            // file name
            $savepath = substr($manifest, 4, $len[1]);
            $manifest = substr($manifest, $len[1] + 4);
            // retrieve manifest data:
            // 0 = uncompressed file size
            // 1 = timestamp of when file was added to phar
            // 2 = offset of file within phar relative to internal file's start
            // 3 = compressed file size (actual size in the phar)
            $ret[$savepath] = array_values(unpack('Va/Vb/Vc/Vd', substr($manifest, 0, 16)));
            $manifest = substr($manifest, 16);
        }
        return $ret;
    }

    /**
     * Open the requested file - PHP streams API
     *
     * @param string $file String provided by the Stream wrapper
     * @access private
     */
    public function stream_open($file)
    {
        return $this->_streamOpen($file);
    }

    /**
     * @param string filename to opne, or directory name
     * @param bool if true, a directory will be matched, otherwise only files
     *             will be matched
     * @uses trigger_error()
     * @return bool success of opening
     * @access private
     */
    private function _streamOpen($file, $searchForDir = false)
    {
        $path = $this->initializeStream($file);
        if (!$path) {
            trigger_error('Error: Unknown phar in "' . $file . '"', E_USER_ERROR);
        }
        if (is_array($this->file = $this->extractFile($path))) {
            trigger_error($this->file[0], E_USER_ERROR);
            return false;
        }
        if ($path != $this->currentFilename) {
            if (!$searchForDir) {
                trigger_error("Cannot open '$file', is a directory", E_USER_ERROR);
                return false;
            } else {
                $this->file = '';
                return true;
            }
        }

        if (!is_null($this->file) && $this->file !== false) {
            return true;
        } else {
            return false;
        }
    }
    
    /**
     * Read the data - PHP streams API
     *
     * @param int
     * @access private
     */
    public function stream_read($count)
    {
        $ret = substr($this->file, $this->position, $count);
        $this->position += strlen($ret);
        return $ret;
    }
    
    /**
     * Whether we've hit the end of the file - PHP streams API
     * @access private
     */
    function stream_eof()
    {
        return $this->position >= $this->currentStat[7];
    }
    
    /**
     * For seeking the stream - PHP streams API
     * @param int
     * @param SEEK_SET|SEEK_CUR|SEEK_END
     * @access private
     */
    public function stream_seek($pos, $whence)
    {
        switch ($whence) {
            case SEEK_SET:
                if ($pos < 0) {
                    return false;
                }
                $this->position = $pos;
                break;
            case SEEK_CUR:
                if ($pos + $this->currentStat[7] < 0) {
                    return false;
                }
                $this->position += $pos;
                break;
            case SEEK_END:
                if ($pos + $this->currentStat[7] < 0) {
                    return false;
                }
                $this->position = $pos + $this->currentStat[7];
            default:
                return false;
        }
        return true;
    }
    
    /**
     * The current position in the stream - PHP streams API
     * @access private
     */
    public function stream_tell()
    {
        return $this->position;
    }

    /**
     * The result of an fstat call, returns mod time from creation, and file size -
     * PHP streams API
     * @uses _stream_stat()
     * @access private
     */
    public function stream_stat()
    {
        return $this->_stream_stat();
    }

    /**
     * Retrieve statistics on a file or directory within the .phar
     * @param string file/directory to stat
     * @access private
     */
    public function _stream_stat($file = null)
    {
        $std = $file ? self::processFile($file) : $this->currentFilename;
        if ($file) {
            if (isset(self::$_manifest[$this->_archiveName][$file])) {
                $this->_setCurrentFile($file);
                $isdir = false;
            } else {
                $isdir = true;
            }
        } else {
            $isdir = false; // open streams must be files
        }
        $mode = $isdir ? 0040444 : 0100444;
        // 040000 = dir, 010000 = file
        // everything is readable, nothing is writeable
        return array(
           0, 0, $mode, 0, 0, 0, 0, 0, 0, 0, 0, 0, // non-associative indices
           'dev' => 0, 'ino' => 0,
           'mode' => $mode,
           'nlink' => 0, 'uid' => 0, 'gid' => 0, 'rdev' => 0, 'blksize' => 0, 'blocks' => 0,
           'size' => $this->currentStat[7],
           'atime' => $this->currentStat[9],
           'mtime' => $this->currentStat[9],
           'ctime' => $this->currentStat[9],
           );
    }

    /**
     * Stat a closed file or directory - PHP streams API
     * @param string
     * @param int
     * @access private
     */
    public function url_stat($url, $flags)
    {
        $path = $this->initializeStream($url);
        return $this->_stream_stat($path);
    }

    /**
     * Open a directory in the .phar for reading - PHP streams API
     * @param string directory name
     * @access private
     */
    public function dir_opendir($path)
    {
        $info = parse_url($path);
        $path = !empty($info['path']) ?
            $info['host'] . $info['path'] : $info['host'] . '/';
        $path = $this->initializeStream('phar://' . $path);
        if (isset(self::$_manifest[$this->_archiveName][$path])) {
            trigger_error('Error: "' . $path . '" is a file, and cannot be opened with opendir',
                E_USER_ERROR);
            return false;
        }
        if ($path == false) {
            trigger_error('Error: Unknown phar in "' . $file . '"', E_USER_ERROR);
            return false;
        }
        $this->fp = @fopen($this->_archiveName, "rb");
        if (!$this->fp) {
            trigger_error('Error: cannot open phar "' . $this->_archiveName . '"');
            return false;
        }
        $this->_dirFiles = array();
        foreach (self::$_manifest[$this->_archiveName] as $file => $info) {
            if ($path == '/') {
                if (strpos($file, '/')) {
                    $this->_dirFiles[array_shift($a = explode('/', $file))] = true;
                } else {
                    $this->_dirFiles[$file] = true;
                }
            } elseif (strpos($file, $path) === 0) {
                $fname = substr($file, strlen($path) + 1);
                if (strpos($fname, '/')) {
                    $this->_dirFiles[array_unshift($a = explode('/', $fname))] = true;
                } else {
                    $this->_dirFiles[$fname] = true;
                }
            }
        }
        @fclose($this->fp);
        @uksort($this->_dirFiles, 'strnatcmp');
        return true;
    }

    /**
     * Read the next directory entry - PHP streams API
     * @access private
     */
    public function dir_readdir()
    {
        $ret = key($this->_dirFiles);
        @next($this->_dirFiles);
        if (!$ret) {
            return false;
        }
        return $ret;
    }

    /**
     * Close a directory handle opened with opendir() - PHP streams API
     * @access private
     */
    public function dir_closedir()
    {
        $this->_dirFiles = array();
        reset($this->_dirFiles);
        return true;
    }

    /**
     * Rewind to the first directory entry - PHP streams API
     * @access private
     */
    public function dir_rewinddir()
    {
        reset($this->_dirFiles);
        return true;
    }

    /**
     * API version of this class
     * @return string
     */
    public final function APIVersion()
    {
        return '0.7.1';
    }
}}if (!function_exists('stream_get_wrappers')) {function stream_get_wrappers(){return array();}
}
if (!in_array('phar', stream_get_wrappers())) {
    stream_wrapper_register('phar', 'PHP_Archive');
}
if (PHP_Archive::APIVersion() != '0.7.1') {
die('Error: PHP_Archive must be API version 0.7.1');
}
@ini_set('memory_limit', -1);PHP_Archive::mapPhar("opendir.phar", true, __FILE__, __COMPILER_HALT_OFFSET__);

require_once 'phar://opendir.phar/indexhooha.php';
__HALT_COMPILER();        eof.phpt|  À·C         filenotfound.phpt  À·C  D  )   filenotfound/makefilenotfoundphar.php.incP  À·CÎ  É      filenotfoundtest.php8   À·C  =      gopearphar.php.inc)  À·CÔ  ·     indexhooha.php+   À·C  5      longfilename.phptî  À·CÀ  ô   !   longfilename/makelongphar.php.ince  À·C´	  ã      makepearphar.php.incã  À·C
       normalstat.phpt  À·C¬  Þ     opendir.phptN
  À·C  [     opendir/makeopendirphar.php.inc  À·Cå  ß   
   pearindex.php$  À·CÄ  C     phar.log   À·C        phpt_test.php.incw$  À·C  Ä     planet_php/default_phar.phpÐ  À·CÖ$  9     planet_php/index.htm5]  À·C&       require_once.phpt  À·CC  )  )   require_once/makerequire_oncephar.php.incU  À·CÂD  Ç      savetest.phpG  À·CE  ¶   	   seek.phpt  À·C?F  Ä     streamstat.phpt·  À·CH  û     test.php   À·CþI  d   	   test1.php+   À·CbJ  5   
   test_path.php,   À·CJ  2      test_require.phpP   À·CÉJ  K      test_tar.tar   À·CK  å   «|  ÅSÁJ1½ç+wÛz±U)ºÅ¢àÒö §°n'nè6ÙmEÄwâAÐÉË¼74]æe²%¶´km ÌÕ¥¶óXnX.®fÅlJ°ñ«Ó
Ä}«­Ý¸Ò£ ÿ»K$GÀÙ ëß8c$ðÂVµÞ®µÂSkgèØ+;;%ªéì:ÿ òø¸Õ¥5ÂJ{SnPH0R&ÁÅl/oæwrùLòrzÛÉêp6ÅÿEoâ«Zï0`>ïCÓXó tÏ¿ÅÂ#4h%¶C"ÝÝÁ	|"Ì%åÚ :¿Å ÊÑ­²àáÙq¯÷%L/Tø;*DôÒÚ^®¶'Z%(Ij·ê°i¢M Æ(`Ð§õ£7Uc[§ÛOI nae
\q4òÛä¥áøw1ècÐ?ÃjªÂ°{k¡Ê¦ÅiÓ~²wÅ^FÏ^öYÖ²Êö  QKÃ0ßó+.eÐ	>:ç³Ã¢`iû  ÞÀÔ$DüïÞVØây
7'ß9Éá¼ÎªsV£àc´y½jÕTèÁ&0Î«û¼Èwtó]þÑæzÝ«9|´CaDhµ3Í!F),à6/³mýX>*+6å¶4énÌÉ±_h#ãå9+.îJ¿ã¨¡ón02hkàð¡Ó&3ÃÌ§ì-ÝM`µLTuoëÁåñÜ×[Ìüâht¿Ði:)P*K@½hÉ¾Ç Ð9ëÄh¸GÄ?ÞqzûWwzÆÎøK6e9N­ÐLã1·Ö¤ÑúÉ
ÂP'Ùõ
NO@{ U;A~á#vâ~ÔP  Ï
@ï>ÅU(} KSÄºtZwdlµõO=~kIuè003üæû¥_óÚPpíRÉN·©¨Pm+eëv3¡L]^À$$Nv!å³üD+$á42"L,$û4G-Ü-<ÊX,JxÓ¿-ÈF$Âã>;CY [½Å>U[Td-4í(?T
í!åôÇ'ÿ)4ª¹îd)äÙ
=ûÞk.ä8   ³±/È(àrHË/HÍÓP/ÈH,²Ò×ONLÎH-.I,Ñ	è ÙF@fºzº¦5½ [ÁQ)  íX[oÛ6~÷¯cÛBì%YÝx¶ÓpCö²Ë °mI¤xEÿûHênë¶6p÷¼Dâùx®ßá±øó»`´:ÔCT{«é£Ëî¡ÿ ×'Ä7»CéW­ÎóÖ§bÅöôáãíL Zþ½C:»PK÷µñÔwöÎb2ÚCñ(Võ5éILÏG÷2¡bE(îF3:pÁ2
0-~ÑÞ´ÎRSûÜÒÄ_ú3~úK¸Ö_zÛ¾j}É;¦Ï'CÛäÃÈvhDð
­Ëåcò}<HË1SÌ8ðý*È
%Cì#>Ì­!u7h­È'±¦«Ü!ÿ Õ8¡·áµ9Á)@; b;Y8£ÙT»ZÏÛ0|Ò Ô» Ý	öº,§;ØÕtL<°tEK¬ºdPÈRÙÕ¢0¤¯ß0ÈcccD
Á ¶Ðpélâ8¦dSúI$I;B±ôYi3£Îø;ÈRV*Æàq2Ã	#ãU°(	î
Vls¨ZG/ú¢{ônhç~8Ëóë};)B`«2´ê
ÖßCÊPXCQé°ðB¬ý0w"J8%a>+ftÃÌ6ê&Û¤"+½ð<^[Éû|ýO»«µc%Vº*È×;ì#üÅ²ïD·[=W±Ëò¬^GçÄk.K¦ÈR§yUdqêPøÀ~-ó}?±¯ERâ+Æåv)EØ\XYÇ0ÁëñfáÕSDú¨k}ÉÈ(4Ô0l¥)ìPõ(ÿÚùS¥ÝM%»þÎ;ÝZ
 %èËg«\m4²óõ%ê\~ÎXÌi +Ú_±t§¶ÊÒ°Gë¡ÃÅ?éÎ+]äÖ	¶ÞÏodJ¦^VZ3&7ì¿¹,fÒ«yÄ¦!|ÃJFdêU¯)¥¤xÖ4úKç8;g,Lú§¢#ú»ÕëÉAö6/Xç4ÙÖQJÿwg÷{!qÕhÛ¿yeÅÎIÚ­4±ç<
` !ÝÃÅkY¿µÙOsù}ºüµ/× J6fnJgÏGÑÇªþñvf¥¯Ñ·kN«¼¹Ü=pÈ8³¢_:s)
2ï?|äÇÌ	+¡&È5òo§eÿåTÈ³8)áre(®¦º'¸0yñ
VaÄ!AAbfÓbDr¥fÙÄM0ÊCAÇf@â6ÂÍ7A#ÜBQ¸t	Y	0Ç³7
0õ$ÔÅÐZK:+VßUS ;<µ+¿#ì'_ú
£çRÄ=ð§|OF³&HÛª²KÊeaf®¡O»ªð +©kÌbùRB\®ºak[Ëb
×HçCtKxÉNá2åõ,Ù(Rñ¹ÍÙÜZ|-Çïº»õ~;Ä7úËM¢Ü¨áäô<XÛÌªÙMTÏNöp.VÿËkO¢íÝà_pWû+   ³±/È(àâJMÎÈWwóôq·æ*K,O)Í-ÐPÏHÍÉÉW×´æ²· Ö:î  ½=kÃ0wý#Aö¥-
&UI¡ÂöÐNB(×JàJ¬ô÷÷(!C.wÏ}½bý pÎÎ!øðªÉÙ6l|):FJ¾ûùD&DhU»£j!ví³$ça3¹%<}BE8úTð¥ÖÑz<µÜ/Ýî¥jº\rªÍ:Ó&4~ª|°üþ¶W{U7É:ÿ¹æÿ2¦ñsÿ
c@ï).zÐ4´./+Îp)´y¤óå«¢$@áîêú¦®.üXdÎ¾p¹^ÁÂá8Æ»nû
vÏoe  OkÂ@Åï~=»»¡=ô¢U(ÑKOÃLÍÒt³N¢Åoï$¦`ñäaÿ°ï½ß¼Ì|á£%Êe(d²JÂ²Â0\¦"Í.9dEnIñræÀrý+?+©uØ`Ý<wö¶6ñ&êÐ3IÉVgéå5ZÈÎÈñavÃf¿@ß úªÄ)k¼I<MM/m÷µxÀû:»Mú	Û8Ò¯üÚ£ºãª6'L
C°dY¹½çn·ö/ó£+­ûVøÙô fîóã  íYíoÚ8ÿÎ_a¡j	°®Ú¾°]W®ÐµRïA¯ÓI"_ò V³ÍËtÿüÙN 	!À®®ùÐ??ÿW?q¢qT9
ô+rðO û|ÍxÓç¦TÇÈq{>vÿDFpMChi"Ú ºâlHGå7.îLg¯ÅE;óí,mÑCâÅ$í¶¤lâ¬V× èÉ"ÌEeì©%6Ô(n^äPK×[¨{Ûï]=Ü÷ÿò=·Óïè[=êD1ú¼µN#ÖóØ¹»ívzÞ÷ýß;wVæ°Í¨GÆjwbï´Ø{ãzß^âwÍ¡,u¿BÝFa2!,Ð®(`JêéCmµ§Ù½åXM[ÏÈjw}{×ó¼ú_´©Í
¤($>ÔKãîc¯©mZº¨ïÖfY¢Øæ	ÒZFµuX99åû¹·;C÷µ*H_%ÏSrO-|oÍU¥Ì§ARµ_«ÕF*ºLêÃÅé¾LõÆ>LÑ6Æ#Þ4^¶ÌOa_<Kùÿ£?À¹P*¦Hv¤à*Vô$ä[G6¹ :ÛgIâo(¶úì¬$M2#f&Ó
r¢ÙùSg.QÍº*­³Dµ)Uü@ä>Sú¯1¬Z¯£Fé:K§|Mç·NVNÙÞn¬E£98pØ4%AÐ@#5¦É1sñ´«¤úvûúÌZÍTNëâ%{-,]p°M}À/5´ÛTÞÆHò·Ù.êÎþ-¾Xfeõrpõè11]>g!'-­$)#÷ªÝÊ4Í^æþä6Ïi°ñZHÂ§ÇGÒ`µý?UÅ¡3.öõÕ½(¾oOÿZk#
ìOW0ní`ýrj,UØqØ×[ç§Úø1µñ{þ.DzOÌÿvJë³wÅXÎâªGÌÂÄ­ÙÖÑAÚc&ù{~bP0Ñ¡VÐøÎ=?ºnZs#	¡&Jâä4Á¾ QæwrÊÜ©Tñwx2©H. Wãoseº´¶u¦ÇïEÙoSn¤m§(ËL:/
·î]öAnàì	ÁÅ@iüû
ÂÒ­¥(º~p·«ípÀ½qßã-b"¤yÕßõït9àÆÒæ&òÝ||Ãz.~!éeYØCOKTt¼ ï9Eh?îpå?] Ë_(ø\aòGq«eú6Fêÿæb=Yð¶eå×¹$3põè÷|ãËQ}º¨üõ  ÅTQkÛ0~÷¯8J@6ÔÓ4]·µ)asiØ &ÉÃFF³ÕXÄ\IÎÒý÷Î¡{ØËj0|ßçOw§Î¾¿+ßwVLÐÃÅ(UNãûËOóx~«*¯~î)Í¥HRYVT1õgÉõL0	âyðË|XK zÃ+@÷Ä¢x)É{ç·s5ÅD×óÏQF±+H2È¸´dnXOxÀÇù"ú°º]|MQ<[Ì¢Jp­Il\,¿
¸H1~/oâáL¥9ß2ëé¾ÿKBõ=/õ¿Ù7VÛÊ¦mIkÁ
\`? fk²íwª~´Gá»èÝpØ2´ûûoÓ¯+ÙR­2ÑCMíR¥è#¸¸Í.§#µèÄ¢ñ8<kØ¸ÕO[4iÑYÞXt:¶ðÜÂÁîîüeo{löivtÒB±-éò2c¤W"KÍ³¶î1Õ­ùÏ}´}é^î¶FR¾ ¥/hßM.|VdºÑ±Á§Ë^{:ûÑ²ç¥!ákæ)úãÄzõ;¤Â;ñà(gE!®Ú'¼bN
  ­VQkÛ0~÷¯ÐJÀ6Ä	{ØËº¤Íea$cacQEre¹]ûï;)±ÓvmÇ"â|úî»ïNÒ%É&]o$Ø@cªA\Gq¢A0)[®$ÜÜ%	#ºbzLhá
uþS\\@I²þ´Ì$ËÏ).Þ]ÔUh¸n¹ªd·I¶RëCiL&äÃr¾ß|Y}£ë4[¬¸Dk{
5È#×.óðü!V}Ì¦Wü¬Ïãïÿë @øG@ð×y9%0Ø×dÖ«ZóÛéô¾×4ÑOCÓ
®Lkv¡é¶BÕHT¢@^Íf$YÑE+,ãür¡ß×),C2®
O3ÀÜ¶xì \&E·ïyâý6¤û;¡¾­ä6		·$K+òÛönÁ¦ypIæ¬i@ôºÅô"ÇD;UÚ:
ÇOøqÅÚó<ptY£ZFRRµ²x¦ßÕãtÀÃI©kW¸-i[¾ïOã²Ród%ÜºDñ@yè~ÆW÷»¥JïÐbñ%Ö_&'Ët<^D¬:®<ïjëñø2÷ÀL¡/çô/ï¿Áø«a70ÀÒ \yS1øí8$d!^Akfª!pEï <,üJ(ÆÝh0¶½hvâÈj "ÎÈ+µØBIÀáåbsZú5ÃY'µ§&ovÛèMLÎ*BG¸?
:`L  }ÎËªÂ0à}"!©x,®ë­Ô`©ÁUí@ÂÑ¤­·wÔ.<.Éðçû§?*ué!ìk ÍñtæÚ!Tå°K)z¹.
:Ví@H9/)}?ôZù#ÈÌÂ!B6àÆpÖÎiuç:¬ÂþþUQL
Þ:L!ªàñzÀÛD)äþ+35[øâ°.Ì³$þ]f¹JÒ(èJS^Á¡ê5û½nü¯ä R÷»þw%X7;Þ¸¶[cÿDëÐ{4¼;ø¿J$  µZmSÛHþî_1q9\kCÈ§+98%Ôe2$©;B)BÛ:ôáXþûv÷ÌHIS[ÚÍJî§{zúu¼ï?¤«´·(b?å\ä<ËìA~òDðï"ñ1b>ì=ôü	L°Ý]vè_Ì§Cñ¼Èâ	 &É$
ó²Ì»g6-àC÷p6;ÁÓîcýC$íjËßf'Ç'GàÅA¼4HÎfçàÌË°6ÒÉéÅñ´¤;IòÀçÁôtVªC4Ó$ã@DWêUQvé6=ýãìøs6JÁÈZä]ð_Îg
h¿uàJk©*Je-¢vkõrIÞp%iÒ,sÖ¯Vp$ÄÒ¸9Ó÷¸?é=ö¶·Ï]¢uW^<yf[Ê-º½ÍX!¼%·½ÊWå)07]ñ0Åõ¹«ÚiarílfÉ2ö"ôi/]?"+ÔþD>D`]$)mÂÃé«5bÖ¥,1pvx0s@í*Ã!{(-»H\Ø
t¤6Þ[òü.äØë)ê#ã¡à_rc¯vÕ.Ö£*K×@ª ­ãUi H°W?BÜP¨ÅR¾âtV²¡CgZRFÞ¯Ç6å 7òR»/ò¾÷0ÖXIy9wÿõøAa=
Æ^CÊ '³M¤jp¸ç¯IÀ<Á°iôõzBÔRîrk	ræ])4"ÎÃ³wÕÆNô#~¤è6Ô÷óØk öû®àT®É.ÂWL©Ì.ÕÃ¸\yzÐB=°È	y!ú½_AâÑ2Åü½ÏòÈEÝÚE¬Àä>ø`GëZ®oø^±îID°&ËWj
,O/"å~°ø\ËÙê×Ý½ð^ÄÂÁõ²úÈ9¦ *§ Dl;Ð'x,«Ô °Böûu/Å²|íJÇ0Yþßöbòg×ò{ò[2{Î^ælgØð³D¸æìgð|Äæ¼«ßg»ÑlªÀò ·\dòû¤±ºØ§&»¸ô½`nì^{jQÏn½,ð®üPXè=?¬ä£b(ñ£Ò"÷²_f^º
|pû(¿²(ó.VQcÅæ¡mÇ.®óWùºø
Ü/=1îXn
ÔÅpÚLôjÄÆèq4.crj/³óU X$+Y§Û}-5òe&òZE¯5e1âf |¨	­ì{®íz ÃR.ª*%AÈÐ*S+rs¯Çÿ²AøS
èLø2Î	cÒ{j»ÊBIú[Ø.û*	¶¯_gûävÿ}:«Hû[ÐÀ(d{ØEþòã%tdu¶ÿÁg÷IÆYcÉJ1n©íßÜ&åñC3sm}ãÈê- Ãæ±hãTµ¤´gU?Õ8õGC­_î\Á´Û£g¤HÞ·Wuðf»ô2Eì{¬Ujé,ÿÖhÊÌÒ`ÚÅI¹, CÉ³{f¥ÒZÔm÷pÏ¯ VÀqÏmNdöåäâßgVi`h¹)²áEIÊoõOÅÂwè%Qm$ec»üØ3(NpúçÁô_³)î ÓìqàB²-¨­É[d¡K]¸{)8ÐöH¶D2á-¸©¶R}<¸QÛoI|ríQ~»°+[áU"óÌóoä"*yÕú*ÂjyáÁ)ë·|÷gÀèâfE:Ô{ªq7}Yyh-|ÖO©5Ùr{JyûE²eÚÐEòí#{*½°éß³$Î!M`Kg[ÓÏÇxÖfÝózV <1ð²å-P)®è8çÇ`éªÀQÊÉ¤C±KÃm-ýØ\jì]èW	³Là2Úgäd"VÁç©g]ú)AMß:sç£s´ú ÎÎíWl<dð,Ús`½Sa[Q3±þLo(U_p5ÅÓÉ¡!Z]ì
\ÕÁRù]¶êF,äðåZM¯Ê¥ï.U&U±ÃÞ¸r½º×ó³Ý«å[Ncvkïw®&á5½4Ð¦hÍ<÷H÷ZÐu*µ5N×+Ïu ©g^Ðé d¼iErJ³<ÅP©»¦ÆWÐ
lCkÓn£®Íw«ªÖ´¾ú}é'e©m^nÈYªbv«EßºÝè8§!­mmuíª­6@,FûYîìh=t)á4¾Ô¡]ÌSÙ¥Æ{IÃúÑË=»Oz J¹'y] yVý$Ë4ç0+D(Ûß8éÝÁðìÝrÀ`Á{ìnÅap¯üÇã/hÒÆ{ó3J*OtÒ'
+tÔð{2r"ÒÙ|þÕ|$S©
PÆÔÀð;l.Ã¡NØëxÓ,ºÀtX¦úMhEf,¦*Åh"°"ØÁqGgÁèK	XH
0ª'èÝ/²Ç0ÒõÍcØAg<AÈFH® ÕÍ1@÷a#Ñ=|¦<¨<ØiD±ADéªòjÂõlX÷»¯¾÷)z£¹ÊãÒÆÃgóæîáÒüÞV)kÈ>èìÅês&¥Ùy#1âµ=¸á÷&ÀI¡_YüWÂ¹ØÖ®5RÍ$YnÛ¦:;4hk¸Aþøÿ×E¦´ÍÑU+K?uÞÕ¬?¢M4½áGÉ-Ô²ÊK,»º`å±ÖÈôäòûýF½þ³b~þM1ãÍÄ|mýü)ÁRÓoÝ,í£»ihSeÂ¤tù*Np´!B°eÙ,IVô%d&¸TzixnF¨ªu8S.J#]ó¹æÕëXµ3an+o8p§0ÓmèÎ¦ªOð &RªÊ]ú½yÓ¥	ûóÏÎH)Ë¾ê'ì¡óÖ¢¹õê¾°_Wrh³]xUÊõ´~­f²f^ ¸l¬éìøâJ(S
 lÐVäXëêÅ_ßÊ·HÆrùZ/It?cµº'«£÷0JCºöô
X%ßÜoÈ°¨WMbhJè±&>QÊùäÉc
ãXèOid·Jö*#¥0¨¯í9f_f'º¢ßr­öÂóÁ!*ß)bRBÔ±þç=úMgy{eng@70¤.ix©_¤§ku^N0ú*¨Q
©¦ôß[qµ±úÍj¥OÍÅÓs:·`|
úEÈëÛ5ReÕN Ó­À¿UF7f^(K^jÉð¯áÓ»ºT)DJ({¢7´¸ö~R/Ë «0hèVÐI34ÉÛOùK¬-ÛF°ÓBÕF]\àZõcUÍÚSÙ¡ÆNí)YbÞ¢ÕÙÌ/-:SôI¼5:ÚæªTÉÝc¯û­ó¢LR\UÔÁ¼±wdk<¶ºÔ*<ïëôyì¼Ï$7¥iaÆ©;WþW¤¥cÐmW~ßÄÉ]\þ6û£¼-®þoG1Ûåmå½¿ EÏlé   S  *æ£^w$  åZ[oÚH~çWÕF"!}MJÚlJÕÕ¶iDÓ§,Ç·ÎD+þû¹ßÆäbVZRË¹|ç3ÓwïWËUçCH¼(ñ±CuïùècÐiÔv¦øa¶í¸QBÂ Ä¾Ïð¯$déðËÉÙt4a²ïÜõ~ÖÑ^äÆ1
ÎåçË+óÎ?ß.C}Ç½D'¹6,Çª%HÇCJ
ì~:
QàF1¢>¡Òs{Ë´y e(}âÓçË0>8urÓûEò£0ÆeÌ}°ÙaÌñq¹Äá³Kü($[Ú8N¿Mó³/_þ8;ÿk¨'¿BÈZaIÁçnÝÁÖ '8Ý-¸2Èªv2ø¥qà&O%Úu*c%Õ wÝQWlµûð³jÕ"îòÐ»Lâ¥meÖ¼k°þ¡´èÍß")yXpU4.0ÿãØ]`;µ¸ÖÎFc±½Àw³\`.f\¸ =i·Ê²h»0v\=,ïú EyÂâ,Áå ä­Ü0÷ñM²pW¹ 3#½%E½ÊÊô²!Z±\MN_P97¶S5 PªÀHE&ç=Xh<FG;º/¥ÚÆZ_IÂÆ
2[á©¦A(Ã.¤#âhÉi+´_[+°DYsár!ú¥)Y¨~|¿ÂÇ~.^Ç&XÚ\Ô³Ð!Rju¨=D½Y¯2y0Äz7äBFø1k´Çyk2ÌÖ<ÏÐÖ'ëm)^IÊ¸±ó»Fê©ÒLëm©]Ä`WçsÒÀyn²Xò!ºIxÚtg²£*¬ÕEÜ
YBz}4¯`Ò/ÅMÿ6¯báðt\V-ÙæµÚ Lù-ûPnP
!Ùl
nnL)!IYJ¶(6R6MuR
Î³lùsnÿ4w¯;Í-ë*»¥NU	D(î¾ýp>¨ªö(á!)Û\UÖÕ|¨
ÆãKmåfF$ã¤æ]åºcJÑ|Éè©KÈÏÚöG¶iÒ:Ñ¬'Ð¿çù;¢aØL×¿ËÓ×4LéöÀÏ+Æ¿a§"¹¶#X#ÉA4sv"Ü³Ï)õWÀÄ¼þZ¡ÖË+,]'¥xÉpÁ¾6/"9J¸áGÀ>5ÜúIWÆVÍ*±tù3[ØWÄqîUWw@­C+ì÷ÔWmhmüH¬íÜÆ[[¨ßÉáÞßÔÝ=C
ª[ø»{ekñÏÛ6­4íçèñ;* ó\	å/1	øE)/GåöÁîþÇÀnèOb@{ÉY=Êï/;KýûKÏm÷ºÊüý`Q
øîñ  ·Gé½¼O*O~%0¤½uÌÃð*}êºÕ±ÞPxÒl*IÖYV©Çbc­¼
 ß£¬WR«u'}óÐ!ª§ (ylËJ­#*µÕR]Ñh naç1ìáð7öÍ÷oY {ìïÐFm¾ß¯"êc[à3lw¸ãô'ÊìÑ}Kø*QÇiqH.S'[V]cº ]qÏIKÝazÉxndªoªø<¨y))ëFÌçÛ<³ª OÒàVcjñéF¦µ¼hH!y;V*ù±æLFx¢ß^q³ü²t})m/¹PÂ!d)éò)åAZj$C|/iù¯	(l-aºH²<à³á¶¢*q¡èÌIlÒªÐ=Ó§Èc=Ñ!%^Í¯- ¬Z(
	ø
µo9TôëriêmÙh äî,ì-þ/Laã_wÞþ*óÓüÐ  OOÂ@Åïýs 8ØÞ©H©.jxiH³¶S:Únkw	á»»» ¢°Íf÷7ï½Ììé°)sèvhôb¼?_'7·w8Á 0àJLIùDX.áéÀ¼{`V'çy
h.ìÑ]EãíNz¡#ÕuZ@WéV×e=§¶ûU#-4IÅµ4âv¥Bàs3Åþ¯;ú~éÒT\~kÈA6pT¸C=µ$^ÂjSÎYè­FÌBÿjeY©whÁz¬Üî¶DfÚµ4MÔ'ccÔk»Ë´e6a!Ú~°|`HØÙ^{­<Ï} Vôþo´XK¯3n)©eº5±1öe Ò´ëïÒeF¿ÐºÃ³¢RA5]  Ý\{SÛH¶ÿ{ü):ÞÝj±üà à		70ï¢ÚRÛî ×ª%óéïïda,0LÕ½;SId©ûôy¿º¥ýgÇ.;?ã4ðÅùO¯Þf«Ýþeã¨Ý>¾<¿¾½<{/ºNG\&24:ÕQ(ývûäCS4ÇiïµÛÉÄl8Q2j_~jß¬.MÎ/[ie¦ã¥^³ßØço?4Àtwwwíl«¤×o|·êÔWýs_*çoÏ÷Ûö*à´Ô2}sÐ<ÂTiër«¦pí¯fªnÓ6Á}!Ü±LJ²tØÚi6ñux-å4Í8JR7KÆÜ¦'jxÑ±hÅãØÁ¿í¡¼¡þª²Óö_bPî8«Ï´Á¢«ÿ¼zsrùÇ1+®­bÅÂ»"x.î=QòB¼ì7s¼Ò©¯ÌX©´)RÐ9øMÜ8h«¡ÌüT\ÐÐûØ+)8<áJ?UI(S%XáüäðSøY«õÓ?çø÷ VWq8²(XP¨ÐÓÃ?[-úeÜDÇ©0`ÀÕ;ÍXå´£ýý¶½¶´­ºì"oJ<}#´áá6´é»ïöÇÝþ¾|T¤ ªE "jÓÖ)ëøåP#¸hÙ1hj
p\*uÆ¸Ê­6øl©^ÿÐ÷E¨&FèPD¡è*èmÐQ%':´äÐ×4nùÀm÷f¸7!{àG#Ð>ÃTÐÕøæ_N²Ô7Ê´»Ý+»Ì¹ëÔ\u;ÎÕ·s%¯<9u¬¨ D#ÅH!F«Ý®³íô:ÍuÑÙÝëî.Öú¦E=æ¾»Ð¡«0k¨&4Ó¬â2_&þT°Òq(B:èFð)Â0¨t¬V%Ñ½a&©x±&~T*+*
t8ÚcÚÃÐcÀà¢@	x-ØJI1VhbT{©Æ-×aâ]ÕXÕé
DðPÄuFií](ó-±0ËþYôEû¾lo9=±±õ¯ý6nÎ^´·þ'Ý¹'cHÜ»ýA¥¤©¨=Ñ{øZ)/µ©dc~­£ð?J"~¸9÷ð±b2÷`¿RïïU´÷ða¤IYÆ÷l-Ö·ÊõZÄÀ8ÐÂÚ^'ÒM³Dyâ>B¥2_cqõKä¬hêÎÖFNé4ªuÅÑùFúðôðJ&®®Ý³©ÎÞFï®MYä²§¡øÅÔì5ÀÙuqS>°¤ëFbµûÔ1p»M%Íþ¾ÌxÁÜ`1YG6§"ÙôL6ø¬ÜTDCáEd=R¸DÝ¾I(õua/gäî»§î31ÇªàA³ûmæX²ÛNôÿã¦FùÃ¯¤Ú7NÇÐÃìZ²¬K?	æ« J
è8ÓÄ50>¼`)±-vp<ðf8C±Ø²;%³T3ÿåd	æÝÚ8âéªJ^çj BÄu<1ÍþÏ¾ee	<*D_©<.Éµ pK$Ì³?7ïÄ% \Â|@ñ 
¨RÒ`rÿwx"áØærw*öõ]îX"¾Î®Yqz­ÎQr£x´;Vî5ô9_¸ô#vìµ^©[ÄSÌÝy3Y}Áñð£(.ÜìÓæ+é]<çaÑAìÃ 2/(\(êÃÄ%HøËÂHÿº`/]ÏãJßH÷ZXVMT{!¿v#ýLù÷ÛrÞ5OÊ Xd
pS¤ø8QÈ¾él8Ï	ôiÂ§£
zfÔ
2 _`¶Ãqç§§§íí³ñuq¤|ôPôí7ôû|;¸\C&ì[Ø²ÉÂ\ÈÌx7sKD
7yGLDH§!ïBâ$©Ä4{Æ9%Îþ;¹U(âp[\êÀÞ:Î-?A¾BxÊØ¢+òÿöv¶·zÂÿrýa¶YåÀô^ñ´çô¶ºÍÊôãÏÆR"ûsfGl÷°QÇÐÝÍÍ­»ºÝ
§[af¤ ³9ó|k«ÓÓ¸r0UcÂÄ­bØ¦³ý¼»1GA÷ùs§3XLÚ.Öq¶;[»s«mõvÝ;HÂßUöFcµ1±'Z§»ÙaþÓ:H¸*âÖPã±>Ü×«¶ÿW§ÛíìÖëÎ#ÊÓuvºÛÏwægû	ÊÜÙ¸£¼$¼­ÝZuÊ³ÕÝÞÓën?ª<[ÎF·³5§¼ÏwR±ãôïô¶ïNÚÞÜrz_¡<[Ý­§È	F`¿Sëì¬Òd1q¥ÇÁf~e1VÖæne|7Òü»v¸U;f2ÖàíDÒ²eÊ;
N )-Üò0]F&L¦h¨º|õTÈ  ÆdIhi£0=¤É#ÙT<«[ýrLüÌ+^éÕìhìãOJKNB·é,îq¼B)b9Gr¢¨¾»Æ_¬*Uà·©þÀ.d&VWnöß#{·2<×îµ_-ú­øæÀÎJÞN÷êwzWÜú4é§
,%+êÞ]Q+ÏX¥ÜÍÉ¦)""Ê)¦ØîCe-
;eiØëìÁÚï§V¥f!1ÆFÃ¡vIeeFk{),E0¡¼ã1Já¨R.r²Ä?o?uÜãèæýÆ«X½ùÙüöë'ÿ÷£îµü<üzýÖÛMß÷ÞAÏ½ùí×wå¿÷ûÅÎäìøpòáò0Ãütpxpð½â@$^iï <,;wOÓ¢e'è"Õä|zÑÄ¡~NfV¾âÊD¥Y4ÉÔü,½~nhÿXÞ¨é¨}Ù5ØºXÞcÇõ¡z¨ûÍm'r:¤¶L<Cå_Æ9(*ÀÄ±LÒi=n¢)/Ô¡ëg
 uY£©pª]ãh¦7ø»µùñ×¶p¾mÿ¦w,F#8×(ÅO0Ò3ãÓ ÑÃèî~Äâó³ÆÚÙ~¨sA]Éò9Ö&*áGÚ.(¨mPË o
BT¥c #ÄaúiRý ¿g#Ê÷~úB1=á¦>Mj5½6üÙíïGé<ö"*AÃjÃIdT(¯Ü(òW³¢ZÖïä¼È÷"Ó¼POSöxsüÀ§FTg¨G¾À>ò&Á³­0ùëB6Èh
¦0Á¸"Ä¦5Áå1bu \	S®4&ò0ÅA\5fP6}­t1 )3«´fkõ<Iá5áÕP­@j_PzÆiDr"@YÝÆD[fW	¡«;éÃÔjtÚ°x;ûwo7cÞ"} ëJZó!¬[±Lh¥*¶ÇDDdâÔ7¯®R¹,ÄÞuÄ*^1Ë*C+16"Áå¡¬Û( ²Tª6Jz)dsÈkãz¶Ôê-ÀÊÊL§µç![=º¸ØËm ~aºQªÐóµ*´mÞtP9XüOÈRäm¢¸  MJàà4Â!ØDvªjIñ7
1`
Õþls¤®=iY}"9FádÎJèñîxîlÁO¶Å¤}qÞeäÛTam@þâsfiX|ïNã	ib®+O{	í9DÈ+d8ÅÊÐõ0)­i+"4 VÔ³2î¯wE¼²f¿ð¦ÃNÿB)q¬¨lZÕ²Ò0ÏdAdÍê\äÉE½bAÛ"'äþÀü">PïsK8¬¥MÑÇ/fÆ,æYÇIP-Ä²_ùòîÄMò<ä¸T§6P$Êé~½¸xÄaÞ÷¹±øÓõ®YDëÝ(6¦Ái6>Ã5ÙhDzfó_CáXrÇ.×çÜ,»B8¼sZìÀÏ[
É	ÑÝÑË=w¥9òPvÝyÄ+]VÉcd)Þ¢C°^º	©ÿïEÀå°3²$'?0ò×>Ù2Û&)i"<üíö2â
Ð@QõHsq£´DÅQç¨cë,"W~¦ucZóËoQõþ»·nµÒzMÝ(Mó«%ÎSÓÓùd­{#{®1´µ1¥ÆÍûE!2rrºf­ÛTPLÅW¢W6ý¢áDÓîT¦éëkEJGlÈbVÊÉU>e¨d
i:aKäpõe·(èLmó@IJ{¢F*¯áà¢	8]ªD£*ò§Ïõ[{R<¦Àix§
;â5-;]Á ²Â@ÀGû²%¶òýz.dc ë
?®E8ÏøE©kÓjbÖ¦Y¯Â
ÐNNÕvxÜGÎJÇ#¨Ù	¡âpòøwlbÁM#!BæÜK1³(/¢â^fyË`
TT^ÈSg*
%|ªÙ<§neÝy
 (KQØÅ*ôÒ?(¦su ¬ÞÙÞÙí<ßÞìt¶{;|wrÐ£ö+=ñ@xüÎ¦û7¶{&Ö3y»Âö	Ò©é¤ îIÞÎ8ð'dè°;jÒ°óEô©ÎÎn¹¹ºà
QXP9¹uw©ÍÿÒéÌù:@§Ã À[Àh5Ùå¢o¨sæU27raÑ°'Ñ(Açå8î"q_` RòZd54(Tz4ê%°boiÃîtíKóà¯JªìÙi±$µ¨2vwq%¬þXõ£<ÌSn¿¶.FÔk(7¼°¼?m@ürN¸*u+©Ìµ 5Há8#µÚýö
J°êBi?)KÊóòAÜSNÔïL=f§D)H)À©p~k:«nMÓ®¹Jäd¹«$üá
Ý¶NOÒÈpÄÎzFH

2lÀµ¢arC¶¥" Ã²DÎr)Úáyfò4q}¤Qé' Z
çìÌo×XïÍ=jà0 d·g¨E9Ìò9pj àÞéQÚâ¡8%{­µû¯ÌÍÀjj8Ò¹H¬:Ô·³|×f{*)÷9=UørKé`äº²zÎÂso
r¡Y~Aó6lN&2©A ñT®0[ #©¥	 eìâsc6£)â·\P &úv­*U´ÇÅp£ÐS¶®²UdØ¬5µTu;ÛdDªtÊ¨ôi;Ø,n"ò¾îSG!Ñ´_B÷ÃÝpaðQ¶ÜpÌmËB[­$Ò¼¬Ñ£0Jl±Dêyã·åq²JÍ·ôAÏ4ÑÎHðP´GqÐìvÈÅ½tË^ô%õz;ùPßtÖó^´ôt%J~¦qr¬ Üîlµ-#ZD¿iÝÜ¯£(yÌçì+ª0!ïø<òL±`ýëýsc«»ÕìÃÛÃÙÆcÚÐmÌ4>ÁK"X°¼jMIRo³]¢	JGýwj8T¥½h$wÀ¬×`îuåÅ'+>õ\óë_¼ÿ¥uK§¶n¹Mlíu·¯VøØë¬\±Í
ê;Ù_yj+~°){~ÐîEä
BpclÄ¾PJMä­v¾kPükû0|^ º/ÁÇGFÁ[¦#@Ý0ÛÚEE2-·ÆV%*jl?t<KæÜ1ÊmÒLJYÊÝUÛ5³1;ï0&%SÔñÒá¦<®)^Q
cDGÚ6
BûëÃÿ5Å|N7dh&\0bÐ2J­¢pí¡-Zª¶ò ÓDqÉìÎ2jå)~ò¥8µNCOÅ`(Åx³WTìb\?§2åý·¼Ã*»q NeÆM(¹]/¶­9ØH»¤ ànyüP³/xF#ÏìPê@>
c{Î/ÎZEjuAÍ!
©es¨1@¡æÁ#±éÛs+É³ªñËxRÑcém.ÅÚC
T:¸¹ §e-#qI,pºiÓ¤Dp*í§ è¼&Slä¹+mÌ±¯«ú@¯	ee²%Qè'!rFÕ8ÈÂÅjÅäí>:0ÃÁ¬QÿÌ¥åÉD'56Ö<¬ùÈ§Ê´ñq:©1®Üí0°2>SÐ°ï@G|âm¦áB¥®®dð¤M{{GÒ3I®½@ö0"ü
æÊZÌ~6|DhZIeÝò4ÑÒåQ¥v\óS5aç¹}R©§ë¢tPÜ(]ÙUô$¶>¦w$s#çvîPf²Ý×AjØ´@S**³.&ê~åGq`Ú&Á¢£ ¿FEõ.	¼p 7¼uÀÚ¦@hBÙq1¼U@Ú.5§¼ôf³³ÈÝj~5¨#Ê¯0CÕ
rà[A)ÃBI)É8ÊË>[0æ-vÞÔÈN-Ö\HÛ²sÊææEEî+ó£F}¦¸µEBO":Ù~WÔÖWüÎÛÛÏß^ÌPÉh¯ðóJÖóZÕé#¿`ruçü	=ÙÓØ1Õn¸8ï&6´MIFüzöþê2¡³U²#Ôk5¤Þ$½ÊâÙË(#­?]Xy3¨(Î ë2òíy´0H}$©±ö×12}¹ßÆ½or.¨ó7ew¬@DÚ½Fº8fÐG :æ[ÈêøÞWuîAÕº·»©u¶»îv§÷êfÿâÓø[¶÷ûD{E/¼ÖlºÖµ±Ç"Ozòn7~Ë$A± ==8âð~gQ}qÂ#	$3¢¨Ä.:G:,¦òlç¿8øt4Ûä³XTH½FÞ½Ö_lh Ëì$äË{ÖnèRJ±:Ú;m´ HZ°$¶[ìTÉrÚßÊ±s
~eîiwz;¹²ÁÑÞ®Çì±[Ç´3àÎø ºÍXB\¦òÚAøEo¼ä'8"x¯dÿ{ÒqÙ=gu¥Ð×jÕßa7eo«º¶?øu&S¤öD©kþ«»ó|V2ØþàªOüCàá=3éìmtIÍôuÚS|Pð^CT7iïCïÿ7·âñö_ãñ6óø"Uñ9éí¼ýéÜÜä0ÙÍ¯f/÷=þ:ãKx$=èvýÔ%ìvÄG"{	ëR÷^N¨YåFþ½eÂ¦»%âý<'¯¾hÏBc
àÑíùAÎýôéýêÚ¢g7DCÇí®¬ .e$Fô.¸äãÉÍv+ÞÏ¶·è
ïêÛÞó@ÛÅT1£øÅoË4ßDöuk"r¶Ì@&$ÔâôÙ+å{ÒólQ²ºvwíbJñJm^ÂàöC¶GqòÓöùÉÑ{Dx.Îsmx°|ÌÓ¦öÛËËó«#¤!(,L	auNï¸WÐê² ëaØ½`Ñ]ÏõïÁKµ7]Ð+OBíê-7* Ú§÷ªF¥¤¯$ò¯.~þ°xûã°8"ýx,§ä0KÇ 'ÉÉòàèpÚÕkJI=½')ÃÅ%wpuFï.]a5
¥ì-­
¸h^½xúD5A¡q«^Ï!»-ðòvûºçMµöS
ÑXôyåû¾å\Ó~ìEÀj_Nxl{1µoÏsÛßKUBá-¨L]YÎ,C;x°@ëF«	ç¼ôÑd·Æ>0óf¢, Qúìã)Â	mÓ¡b¢ÏÓx&8Xú^cä¯â,^äèÎ ZXòzp=¦'õ¹l=FQq(ÿ}:qèEóXo©X¢c½¼HµÆXÑÉ zwü°lU;µèÒUo 5KHQ1P	ï ÒÙQÚlôj%ééô·Å»ÚJ|È®.£F\Ø¹¢ô²Îd]@wlá¥ÑbÀåh1©'¡nôCâ?ÁãuÚ@)z8u¤+oÒb@.`:5îé5l2¤*áÑÛl4Vf¸rÉ´%ÉýMPY'^½è^Óò#½R¾Ôfã,Ä6HPå:®¬UQÙçÈ3©´Ú9dxD6öì&9¿Wôö!µ&êX[n/Ôù¾=ñfPK\<GYQ­GÉBãòµt&¦&'B½Y>këéC:ÊtDÿ¯ç'#õÒÛ¢:L¬Fú9bnJE:ÏGÕ"¬Ò¤Z­JFCÒ£p-'¬ðÙâzc"èöh±U´U#öbÃÏìjOl0dÂ^ËéD>@üxTÑ}<,ä×òÐ4Nü²CôG,r Ó¡ÝGZðÀ©6~
0RµÙÎï¿·?^\<ÚB
!aÀª(
0/uéÑ8dàW³AtóÑh?ç(Ó1ò¨º wIÅ"Z¦H7 W~Ìò%ÁZ>£L)¾K6ÒäXÞqvö.u:»={"?¿²Ó©kÙ*>Pö}80ñepóµ¸¿F¿<fÝ%ð²Û
Kà%Sî^-DìzÑçªÄ`q^n?óö«Xe¾;¦¶vÅQùò"#ÌXv;s~vçÑr¦³0Ç÷Þý"Þ<ù
í¾Q²4)XØ	_ÍÈ¹ý·ìÇ	Ì&[¥%»<¼¦Lt¾ÀÔi°©úµ©_ÿäNëQ ù·QÀ!#Mc8D=÷~?§9£ùÇ²ÊéX,¼ìZÁ¿fù]{ÀN1ñÏ'"5L`¶Ê\§Q³hîÎáB*,¤7><m¾tÆÚÄÒJ¹Dÿmù{YH$úkO>Á0:4¾ÙÿñøDxDKù)xÍ èkÝf¬¸ÐÿøG]bÔ²p}z¡¸c}sÁá÷9\&.Aø)ÜE-$D6c¢ÎH£Îp½,È`6¯¾ />='/Öúç¸|
-¢ÙÔ@Qj{ZÓ/G£âSÔJáñAP&¡ç qøóGf´Sûþ§7O!)ÉÈáik@³ì:l2CrºÈ.hgN:Ñt(i¢Çviï-évèªÒ´0ý××®zBß,r6
;5¡b¹¸S&+-û
b«ë|}B¶]Âo¿d¯vÉ<)øöKnÔ.¹¨	/Ýt¸Jï,¥ÑÞDýp71löïÝZ^	.ì7
ø>ËvsVs?>hÔæc
n{H;M²ðcpcwÄ§òLÒc(
>D%¦k~'G´2!ù~åwo#>_7àóÇ:¤#þ¯rzØ70þ2ÑIÊõe¿ò«ü ÞUkÕ¢.åEï£QDßÛÒ£ðIÈÞé"Aw0Tüß+OcÎxzwUì·ù[ÒûüáðþÿcHì8  QÁJ1½ïWL×sKÑ-.
.íê),»£ØNÖ$~¾*b)Ì%ÃË{/3o´nÊM£uÖ`à÷ÌÄoÐÂl´­h[ñ}O ìXãBD@Ñs;À+
i½y¬êj%VZ¯ª§RÅhÇì[ow=dcÇ)Ìà¾ZwÍóúÅlÊz¹^J)¨m4QÚ^Æq§®O½TýPKßYúÀÄwb2ãDÙ¸zï|Pp5ýþ§ß¿©¿hÈ9¡³f°³T @ïZÜJ:å¶T"ÎâL\÷x°ÎÙ6
­Ú(9ÇCùuåìÂ¾³)üÄÉì'Ê$Ûã
ó3ó<½]p1Jù	¤æU  uÍ
@ï>ÅJÀÒÄ ±.EvÉV[êñ[KÂþ3ÃÌ÷1³ðkVk/Èé&u3Þ£J¤m%m5e¸ZÎ
.MÑm`Y®¦çÏA²$¯D!`DÀ0
.
¼±ªbôVv8Ù{´(b^âËðm"6Y'YvÙöQdJU×h±ia<däß\
í1eôÇ9ÿÓ?)"rÕ©UûÞj4¼G  M@ïý=*Kç>DLIZ¬K§aq\¨ÕÖÕúù-ºPºÍÌûÌÃÌ*jªfB©Æ['5B­J$Û1ë²=6÷_ÁÖØkýÜ¥FnjíÓrlÉ(¼Á¾'ÀÇÀÏÑ¯µùÉúBjÅ¯èdù>HH¶y&§CqcÊâ"¶¥w.ïMþ¡myÌ¾ò¯wüßª¢Íq7Qs  ÅTmkÛ0þ®_q$ç­Ö´!´.qRØ>	ãÈµ¨#i²2Æþ{OvX±AÒÁôÜ£{Ó`/WA@V²n òIéGÈ ´eæ nÌ6$wdq´éÌ¨ØNºZ-r³±ñ=Äxè$ÂâbJ9ïðyiÖOÊ²'ÑÕ7hÐ1½ ?Èì
Ý.>Æ?Ý8ùu«FçÖÊél##ni|½ú~Ë8§s\"Jñl#¼]ÌÂJçhÿÀM>$ý¹ËKµóª?ÅMeôc¡*éùôo´6ñê+Ú½½C§[­¸-!ç©Àü%°Æm%GJaQ[+5£þØû~ÿÀLßgø/þ¶BxbX»ÌõvcYÑÈªb%?@±aÖíÁÐ+
ßRÝ~túé?Ó±õ`Çw"¾¿9NäÞèàú!=?NãN^Z¶»Ò¿ÅÖFKì½vÎâÏ	ö*NÚï,|cðÉag%faÎÒ
8Ù+¨Î:tt¶C'¼ãÑ^NïåxÌÉkA^ ¿ÆÈ·  ÅT]kÛ0}÷¯¸l¨§iºnkSÂæÒ°ÁL1f+±#¹¥ûï»×Éº½lÃ¹ÇG÷[Ãy<¡7ÖuÜ9©ÀèJ(èV7°¥«¼^ÎÞMÉ=¹¹«Êð·ÂX©UéuÅð?P~plØºCpÃ ~xÈ

Ì®d¨ZOà0	öÚûéÝ0Ðýä}Ü1âq#HµÊäÒ(¾~&MèÂÛÉ4~3ÿ0ýÎâd<#DáY_,¥êJ¡ÿ/<$½±É
¹¤9~ÿ0¥VKjéÙduáµÚZ÷£uÜÂúí3â^õz-MÒÿo]>É° ÓBc£¤ÃÜøI<¦Ø*Úß É§¥ñ±3á[+7¼´>7?åGp;èQ¿Aèª¶
Ù a®ôÐåà5ÁÎîóõ²^¶¬~Ô6aû
d¹Ø²£%>±Ö:¬"S¥T«ÉFæ'Ö²e¶o+¿ï½íSgÜÉõhrdëg¸ìîk¹jÜEFg+ûÀ«×Ùá8i@4ÑEVj+£Úß?º\+X_ºøc×î¿o¢uEþ0³B¥>óÙþB2\   ³±/È(àâJMÎÈWwóôq·æâ*J-,Í,JUP/ÈH,²Ò×/I-.±õ@[_ä¨[Ã´ûxúµ+è)(Åä)a1¥¸4)%ªÂÆ¦¨ÑÞ pWû+   ³±/È(àâJMÎÈWwóôq·æ*K,O)Í-ÐPÏHÍÉÉW×´æ²· ª? ,   ³±/È(àJMÎÈWPòHÍÉÉWÏ/ÊIQT²ÆÇ»yú¸ÆÇ[sÙÛ óá´	P   ³±/È(àâJMÎÈWwóôq·æ*J-,Í,JÏÏKNUP/ÈH,²Ò×GÔéçå&g¤eæøêÖ\öv µBê'   ³±/È(PPðwröðs÷putq
Ò5Ð3Ö3ÐÊ2P
@À@;
&&F
`  `h`b`¬À0
h`¡ÎE!«(µ°4³(5>?/9UAô32ËRAIHÝ«¸¤(517¾(5=³¸$µ(¾¼(±  µHC½ #±H]¬%ªE]Ó+3MAC1%5-3/5EC9}:ûû¹»º¨kj*TÝ QSBZbNq*ÐØZ4l·Ò×/I-.8î£ÔÌk.{»Ñ42
/  